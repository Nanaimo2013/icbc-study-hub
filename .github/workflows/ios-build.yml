name: iOS Build

on:
  push:
    branches: [ main ]
    paths:
      - 'iphone/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'iphone/**'
  workflow_dispatch:

jobs:
  build:
    name: Build iOS App
    runs-on: macos-latest
    defaults:
      run:
        working-directory: iphone

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: iphone/package-lock.json

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install dependencies
        run: |
          npm ci
          gem install cocoapods
          cd ios && pod install && cd ..

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.2'

      - name: Setup Provisioning Profile
        env:
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/build.keychain

          # Import certificate to keychain
          echo $BUILD_CERTIFICATE_BASE64 | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

          # Import provisioning profile
          echo $BUILD_PROVISION_PROFILE_BASE64 | base64 --decode > profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Build iOS App
        env:
          DEVELOPER_APP_ID: ${{ secrets.DEVELOPER_APP_ID }}
          DEVELOPER_APP_IDENTIFIER: ${{ secrets.DEVELOPER_APP_IDENTIFIER }}
          PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          cd ios
          xcodebuild -workspace ICBCStudyHub.xcworkspace \
            -scheme ICBCStudyHub \
            -configuration Release \
            -archivePath $PWD/build/ICBCStudyHub.xcarchive \
            -sdk iphoneos \
            -destination generic/platform=iOS \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            PROVISIONING_PROFILE_SPECIFIER="$PROVISIONING_PROFILE_SPECIFIER" \
            PRODUCT_BUNDLE_IDENTIFIER="$DEVELOPER_APP_IDENTIFIER" \
            clean archive

      - name: Export IPA
        env:
          DEVELOPER_APP_ID: ${{ secrets.DEVELOPER_APP_ID }}
          DEVELOPER_APP_IDENTIFIER: ${{ secrets.DEVELOPER_APP_IDENTIFIER }}
          PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath $PWD/build/ICBCStudyHub.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath $PWD/build

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: iphone/ios/build/*.ipa

      - name: Upload to App Store
        if: github.ref == 'refs/heads/main'
        env:
          APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
        run: |
          xcrun altool --upload-app -f ios/build/*.ipa \
            -t ios \
            -u "$APP_STORE_CONNECT_USERNAME" \
            -p "$APP_STORE_CONNECT_PASSWORD" \
            --verbose 